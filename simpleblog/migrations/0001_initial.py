# Generated by Django 3.2.10 on 2021-12-24 06:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import mptt.fields
import simpleblog.blocks
import wagtail.contrib.routable_page.models
import wagtail.contrib.typed_table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailimages', '0023_add_choose_permissions'),
        ('wagtailcore', '0066_collection_management_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Name')),
                ('icon', models.CharField(blank=True, help_text='Icon name', max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, max_length=80, null=True, unique=True)),
                ('description', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text='Categories and Menu Item, unlike tags, they can have a hierarchy. You might have a Jazz Item, and under that have children items for Bebop and Big Band. Totally optional.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='childrens', to='simpleblog.category')),
                ('thumbnail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('summary', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Summary')),
                ('custom_template', models.CharField(blank=True, max_length=100, null=True)),
                ('custom_styles', models.TextField(blank=True, null=True)),
                ('custom_scripts', models.TextField(blank=True, null=True)),
                ('show_comments', models.BooleanField(default=True, help_text='Show all comments')),
                ('allow_comments', models.BooleanField(default=True, help_text='Allow visitors to comments')),
                ('view_count', models.IntegerField(default=0, editable=False)),
                ('featured', models.BooleanField(default=False, help_text='Whether this page will appear featured posts list')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='simpleblog.category', verbose_name='category')),
            ],
            options={
                'ordering': ('-first_published_at',),
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='simpleblog.post')),
                ('contents', wagtail.core.fields.StreamField([('richtext', simpleblog.blocks.RichtextBlock()), ('quote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock(required=True)), ('author', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))])), ('choosen_pages', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=False)), ('style', wagtail.core.blocks.ChoiceBlock(choices=[('list', 'Page List'), ('card', 'Page Card')])), ('columns', wagtail.core.blocks.IntegerBlock(default=2, max_value=4, min_value=1)), ('show_thumbnail', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('show_summary', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('pages', wagtail.core.blocks.ListBlock(child_block=wagtail.core.blocks.PageChooserBlock(page_type=['simpleblog.Post'])))])), ('code', wagtail.core.blocks.StructBlock([('language', wagtail.core.blocks.CharBlock(required=True)), ('filename', wagtail.core.blocks.CharBlock(required=False)), ('caption', wagtail.core.blocks.TextBlock(required=False)), ('code', wagtail.core.blocks.TextBlock(required=True))])), ('gist', wagtail.core.blocks.StructBlock([('id', wagtail.core.blocks.CharBlock(required=True)), ('file', wagtail.core.blocks.CharBlock(help_text='If the gist has multiple files, specify the filename you want to show', required=False)), ('line', wagtail.core.blocks.CharBlock(help_text='Line numbers you want to show. The rest are removed. 1-3 or 1,2,3 or 2-', required=False)), ('highlight_line', wagtail.core.blocks.CharBlock(help_text='Line numbers you want to highlight. Uses the same syntax for line ranges as line', required=False)), ('hide_footer', wagtail.core.blocks.BooleanBlock(help_text='Removes the gist footer', required=False)), ('caption', wagtail.core.blocks.TextBlock(help_text='Places a header above the gist with your chosen caption string', required=False))])), ('diagram', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=True)), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('code', wagtail.core.blocks.TextBlock(required=True))])), ('embed', wagtail.core.blocks.StructBlock([('caption', wagtail.core.blocks.CharBlock(required=False)), ('embed', wagtail.embeds.blocks.EmbedBlock(max_height=400, max_width=800))])), ('image_gallery', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=False)), ('width', wagtail.core.blocks.IntegerBlock(default=185, required=True)), ('height', wagtail.core.blocks.IntegerBlock(default=105, required=True)), ('classnames', wagtail.core.blocks.CharBlock(required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('classnames', wagtail.core.blocks.CharBlock(required=False))])))])), ('table', simpleblog.blocks.CustomTableBlock(table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': ['row_above', 'row_below', '---------', 'col_left', 'col_right', '---------', 'remove_row', 'remove_col', '---------', 'undo', 'redo'], 'editor': 'text', 'height': 108, 'minSpareRows': 0, 'renderer': 'text', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'})), ('table_typed', wagtail.contrib.typed_table_block.blocks.TypedTableBlock([('text', wagtail.core.blocks.CharBlock()), ('numeric', wagtail.core.blocks.FloatBlock()), ('rich_text', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('country', wagtail.core.blocks.ChoiceBlock(choices=[('be', 'Belgium'), ('fr', 'France'), ('de', 'Germany'), ('nl', 'Netherlands'), ('pl', 'Poland'), ('uk', 'United Kingdom')]))], group='Content Blocks'))], blank=True, help_text='Contents', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('simpleblog.post',),
        ),
        migrations.CreateModel(
            name='TaggedPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='simpleblog.post')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_items', to='taggit.tag')),
            ],
            options={
                'verbose_name': 'Post Tag',
                'verbose_name_plural': 'Post Tags',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='simpleblog.TaggedPost', to='taggit.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='post',
            name='thumbnail',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image'),
        ),
        migrations.CreateModel(
            name='Index',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('summary', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Summary')),
                ('custom_template', models.CharField(blank=True, max_length=100, null=True)),
                ('custom_styles', models.TextField(blank=True, null=True)),
                ('custom_scripts', models.TextField(blank=True, null=True)),
                ('show_comments', models.BooleanField(default=True, help_text='Show all comments')),
                ('allow_comments', models.BooleanField(default=True, help_text='Allow visitors to comments')),
                ('view_count', models.IntegerField(default=0, editable=False)),
                ('post_per_page', models.IntegerField(default=4, help_text='Number of post shown in each page.', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(20)])),
                ('contents', wagtail.core.fields.StreamField([('richtext', simpleblog.blocks.RichtextBlock()), ('quote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock(required=True)), ('author', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))])), ('choosen_pages', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=False)), ('style', wagtail.core.blocks.ChoiceBlock(choices=[('list', 'Page List'), ('card', 'Page Card')])), ('columns', wagtail.core.blocks.IntegerBlock(default=2, max_value=4, min_value=1)), ('show_thumbnail', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('show_summary', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('pages', wagtail.core.blocks.ListBlock(child_block=wagtail.core.blocks.PageChooserBlock(page_type=['simpleblog.Post'])))])), ('code', wagtail.core.blocks.StructBlock([('language', wagtail.core.blocks.CharBlock(required=True)), ('filename', wagtail.core.blocks.CharBlock(required=False)), ('caption', wagtail.core.blocks.TextBlock(required=False)), ('code', wagtail.core.blocks.TextBlock(required=True))])), ('gist', wagtail.core.blocks.StructBlock([('id', wagtail.core.blocks.CharBlock(required=True)), ('file', wagtail.core.blocks.CharBlock(help_text='If the gist has multiple files, specify the filename you want to show', required=False)), ('line', wagtail.core.blocks.CharBlock(help_text='Line numbers you want to show. The rest are removed. 1-3 or 1,2,3 or 2-', required=False)), ('highlight_line', wagtail.core.blocks.CharBlock(help_text='Line numbers you want to highlight. Uses the same syntax for line ranges as line', required=False)), ('hide_footer', wagtail.core.blocks.BooleanBlock(help_text='Removes the gist footer', required=False)), ('caption', wagtail.core.blocks.TextBlock(help_text='Places a header above the gist with your chosen caption string', required=False))])), ('diagram', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=True)), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('code', wagtail.core.blocks.TextBlock(required=True))])), ('embed', wagtail.core.blocks.StructBlock([('caption', wagtail.core.blocks.CharBlock(required=False)), ('embed', wagtail.embeds.blocks.EmbedBlock(max_height=400, max_width=800))])), ('image_gallery', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=False)), ('width', wagtail.core.blocks.IntegerBlock(default=185, required=True)), ('height', wagtail.core.blocks.IntegerBlock(default=105, required=True)), ('classnames', wagtail.core.blocks.CharBlock(required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('classnames', wagtail.core.blocks.CharBlock(required=False))])))])), ('table', simpleblog.blocks.CustomTableBlock(table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': ['row_above', 'row_below', '---------', 'col_left', 'col_right', '---------', 'remove_row', 'remove_col', '---------', 'undo', 'redo'], 'editor': 'text', 'height': 108, 'minSpareRows': 0, 'renderer': 'text', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'})), ('table_typed', wagtail.contrib.typed_table_block.blocks.TypedTableBlock([('text', wagtail.core.blocks.CharBlock()), ('numeric', wagtail.core.blocks.FloatBlock()), ('rich_text', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('country', wagtail.core.blocks.ChoiceBlock(choices=[('be', 'Belgium'), ('fr', 'France'), ('de', 'Germany'), ('nl', 'Netherlands'), ('pl', 'Poland'), ('uk', 'United Kingdom')]))], group='Content Blocks'))], blank=True, help_text='Contents', null=True)),
                ('thumbnail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Index',
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
    ]
